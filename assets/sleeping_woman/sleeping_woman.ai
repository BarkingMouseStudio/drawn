%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Danielle Swank) ()%%Title: (sleeping_woman.ai)%%CreationDate: 9/10/12 5:12 PM%%Canvassize: 16383%%BoundingBox: -225 -314 1024 607%%HiResBoundingBox: -225 -313.5293 1024 606.187%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 400.5 299.5 400.5 299.5%AI3_TileBox: 4 -6 796 606%AI3_DocumentPreview: None%AI5_ArtSize: 800 600%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 11%AI8_OpenToView: -569.5 841.5 0.5 1140 757 18 0 0 43 129 0 0%AI5_OpenViewLayers: 77777777777%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 96 8%%BeginData: 8850 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD13FFA8FFA8A87D7D2727F82752A8FFA87D7DA8FD6CFF7D52FD11%F827A8FD6AFF27FD0AF827FD09F8277DFD68FF27FD17F827A8FD65FF7DFD%08F827FD11F852A8FD63FF27FD1CF852FD61FFA8FD1EF87DFD60FF52FD1E%F852FD5FFFA827FD1EF827FD5FFF52FD20F8277D5227F827F82727FFFFFF%A8FD52FFFD25F85227525252A8FFFF27F852A8FD4EFF7DFD23F827FD09FF%FD04F852FD4DFF52FD23F87DFD0AFFFD04F827FD4CFFFD25F8FD0BFF27F8%F8F827FD4AFF7DFD18F85227FD0BF87DFD0BFF7D27F8F827FD49FF27FD16%F827FFFFFFA852FD09F827FD0CFFA827F8F8F8A8FD47FFFD0FF827FD06F8%27FD06FFA8FD09F8A8FD0DFF52F8F8F8A8FD41FFA8FFFFFFA8FD15F827FD%06FF7DA8FF27FD07F87DFD0EFF52F8F8F87DFD3FFF27F852FFFF52FD11F8%527D7D7DFD06FF7DF8F8A8FF27FD05F827FD10FFA852F8F8A8FD3CFFA8F8%F827FFA827FD11F852FD0AFF27F8F852FFFFFD05F8A8FD12FF7DF8F8FD3C%FFF8F852FF7DF8F8F827FF27FD0CF852FD0AFFA8FD04F8FFFF7DF8F8F87D%FD14FF52F827FD3AFF27F8F85252F8F8F827FFFFA8FD0CF8A8FD0AFF52FD%04F8A8FF7DF8F8F8A8FD15FFF8F8F8277DFD37FF27FD05F8277DFFFFFFA8%FD0BF852FD0AFF7DFD05F8FFFF7DF8F8F8FD16FF7DFD04F87DFD36FF52F8%F827277DA8FD04FF52FD0BF87DFD0AFFFD05F852FFFF52F8F827FD06FFA8%27F8A8FD0CFFA8F8F827F8F87DFD3FFF52FD0CF87DFD08FFA852F8F8277D%FD04FF27F8F8F8FD06FF7DF8F827FD0DFF5227FFA8F827FD3EFF7DF82727%522752FD07F852FD06FF7D27F8F8F827A8FD04FFA8FD04F8A8FD05FFFD04%F87DFD07FFA8FD04FFA8F8FFFF7DF87DFD42FFA852FD08F8A8FD04FF7DFD%06F8FFFFFF525227FD04F8FD05FFA8FD04F852FD06FF2727FD05FF52A8FF%FF27F8A8FD36FFA85252A8FD04FFA827FD0CF8527D7D27FD07F8277DFD08%F8A8FD04FFA8FD04F827FD05FFA8F827FD05FF7DA8FFFF7DF8F8FD34FFA8%52F8F827FFFFFF7D27FD23F8FD05FF7DFD05F8A8FD04FFA8F87DFD06FF7D%FFFFFFF8F87DFD32FF7DF8F8F852FFFFFF27FD0AF82727FD19F8A8FD04FF%A8FD05F8A8FD04FF7DF87DFD05FFA87DFFFFFF52F8A8FD06FF7D527DFD29%FFF8F8F87DFFFFFF27FD07F852A8A8FD04FFA827FD15F827FD05FFA8FD05%F87DFD04FF7DF8A8FD06FF27FFFFFF52F8A8FD06FFA8F8F8F87DFD27FFF8%F8F8FD04FF27FD05F827A8FD09FF7D27FD13F8A8FD05FFA8FD05F87DFD04%FF27F8A8FD05FFA827A8FFFF7DF87DFD08FF27F8F827A8FD25FFF8F8F8A8%FFFFFF27FD05F87DFD0CFF7D527DA8FFA8A852522727F827F82727F8F87D%FD07FF27FD04F852FD04FF2727FD07FF27A8FFFF7DF852FD09FF2752277D%FD25FFF8F8F87DFFFFFF7DFD05F87DFD16FFA8FFA8FFFFFFA8A8FD08FF27%FD04F827FFFFFFA8F852FD07FF277DFFFF7DF852FD32FF27F8F87DFFFFFF%A8FD05F827FD26FF52FD05F8FFFFFF52F87DFD07FFF87DFFFF52F827FD32%FF52F8F827A8FFFFFF27FD05F8A8FD25FF52FD05F87DFFFF52F8A8FD06FF%A82727FF52F8F827A8FD31FFA8FD04F8A8FFFF7DFD05F8FD26FF7DFD05F8%7DFFFF27F8A8FD07FFFD06F827FD33FF52F8F8F827A8FF7DFD04F827FD18%FFA87DA8FD0BFF7DFD05F852FFFF5227FD07FF7DFD06F827FD34FF27F8F8%F8275227FD05F852527D7D7D275227527DFD0EFF27F852FD09FF5252FFFD%05F87DFD0BFF7DF8F827FF52F8F8A8FD06FFA8FD2CFFA827FD14F8277D7D%FD0BFFF8F8F8FD09FFF8F8A827FD04F852FD0BFF27F8F8A8FF27F8F852FD%05FF27F8A8FD2DFF7DF8272727F8F8277D7D522727FD0BF87DA8FD08FF27%F8F852FD06FF5227F8F8A827FD04F87DFD0BFF7DF827FFA8F8F8F87DFD04%FF52F8F8FD30FFA8FFFFFFA8FD05FFA8A85252FD0AF852FD07FF27FD04F8%7DFFFFFF7DFD04F87D27FD04F852FD0BFF7DF827FF7DF8F827A8FFFFA8F8%F8F87DFD0CFFA827A8FD30FFA8A85227FD06F827FD06FFA8FD05F8A8FFFF%FD05F8FFFD05F87DFD0BFFA8F852FFFF7D7D52FFFFFF27F8F87DFD0EFF27%27FD34FFA827FD06F8A8FD05FFA8FD04F827A827FD04F85227FD05F87DFD%0BFFA8F827FFFFFFA8F8F87D7DF8F852FD0FFFA8F8A8FD35FF7DFD06F8FD%07FFFD09F87D52FD06F87DFD0CFF27F8FFFFFF52FD05F8A8FD11FF5227FD%36FF7DFD06F8FFFF7D527DFF27FD07F827A827FD06F87DFD0CFF52F852A8%FF27F8F8F827A8FD12FF7DF87DFD36FF52FD06F827F8F8F827FD08F82727%FD07F8A8FD0CFFF8F8F852FF27F8F827FD14FFA8F827FD37FFFD1CF87DFD%0BFF7DF8F8F8A8A8F8F8F87DFD14FFA827F87DFD36FF52FD1BF85252527D%FD07FFA8F8F8F852FF7DF8F8F87DFD15FF27F8F8A8FD35FF7DFD1FF8A8FD%05FFA8F8F8F827FFFF52F8F8F8A8FD15FF52F8F8F8A8FD35FFFD1EF852FD%06FF27F8F852FFFFFF27F8F8F8A8FD15FF7DF8F8F827FD34FFA8FD1CF827%A8FD06FF7DF827A8FD04FF52F8F8F8FD16FF7DFD04F87DFD34FFFD1CF852%FD07FF7D7DFD06FF7DF8F827FD16FFA8FD04F852FD27FFA8FD0BFFA8FD1C%F852FD10FFF8F827FD16FFA8FD04F827FD26FF52F8F852FD09FFA8FD1CF8%27FD10FF27F87DFD16FFA8FD04F827FD25FFA8FD04F87DFD08FF7DFD1CF8%27FD0EFFA852F8F87DFD16FF7DFD05F8FD25FFA8FD04F827FD08FF27F827%FD17F8527D7D7DFD0BFFA852FD05F8A8FD16FF52FD04F827FD25FF52FD05%F87DFD05FFA827FD19F827FD0EFF52FD06F827FD17FF27FD05F8A8FD24FF%27FD05F87DFD05FF27FD1BF8FD0CFF7DFD08F87DFD16FFA8FD06F827A8A8%FD21FF52FD07F8FD04FF7DFD1CF852FD09FFA852FD07F8277DFD17FF52FD%0AF852FD1EFFA8FD08F852FFFFFF27FD0AF827FD12F852A8A8FD05FFA827%FD07F8A8FD19FF27FD0BF87DFD1DFF52FD09F85252FD23F87D7DA852FD09%F852FD18FF7DFD0CF827FD0BFFA87D52FD0FFF7DFD3DF87DFD16FFFD0DF8%27FD09FFA85227F8F87DFD0EFFA827FD09F87DA827FD29F827277D7D27F8%F8F87DFD14FFA8FD0EF8FD07FFA827FD04F87DFD11FF7D52FD06F827FFFF%A827FD13F827F8F8F827F8F8F827F827F827FD05F8277DFD05FFA8F8F8F8%7DFD15FF7D7DFD0BF827FD07FF52FD05F852FD13FFFD07F8A8FFFF27FD23%F82752A8FD07FFF8F8F8FD17FFA827FD04F827FD05F827FD06FF7DF8F852%A852F8F852FD12FF27FD06F87DFFFF52FD21F827A8FD0AFF27F852FD17FF%52FD04F852FF7DFD04F8A8FD05FF7DF8F827FFFFFF7DF8F8FD12FF27FD06%F87DFFFF52FD07F852A87D52FD15F852FD0CFFF8F87DFD17FFFD04F827FF%FFFF7DF8F87DFD04FFA852F8F827FD05FF7DA8FD12FF52FD06F827FFFF52%FD06F827FD05FF7DA87D52FD07F8FD062752277DFD0DFF27F8FD17FF7DF8%F8F852FD06FF7D2752A8FF7D27F8F8F8FD1AFF52FD06F827FFFF52FD06F8%52FD04FFA827F87DFF7DFD06F87DFD14FF7DF852FD16FF52F8F8527DFD06%FF52FD09F8A8FD1AFF7DFD07F8FFFF27FD06F852FD05FFF8F8F852FF7DFD%05F852FD13FFA8F8F87DFD15FF27F827FD07FF7D27FD08F827FD1CFF52FD%07F8A8A8FD07F87DFD05FF52F8F8F87DFF27FD05F87DFD06FFA8A8A8FD07%FFA827F8F8F8FD14FFA8F8F852FD07FF27FD09F827FD1DFFA8FD07F8A87D%FD07F87DFD05FFA827F8F8F8FFA8FD06F8FD05FF7DF827FD08FF52F8F8F8%52FD13FFA8F8F8A8FD06FF7DFD09F8277DFD1EFF7DFD07F87DA8FD07F8A8%FD06FF52FD04F8FF52FD05F852FFFFFF27F8F8FD09FFFD04F8A8FD12FF7D%F827A8FD05FFA827FD09F87DFD20FFA8FD07F8A8FF27FD06F8A8FD07FF27%F8F8F852FF27FD05F85252F8F87DFD09FF7DF8F8F827FD12FF52F852FD06%FF7DFD08F8277DFD22FFA8FD07F852FF27FD06F852FD07FFA8FD04F8527D%FD07F827A8FD0AFF52F8F8F8A8FD10FFA827F852FD06FF52FD07F8277DA8%FD24FFFD07F87DFF52FD07F87DFD07FF27FD05F827FD05F827A8FD0BFF27%F8F852FD11FF27F87DFD06FF27F8F8F82752527DA8FD27FF27FD06F852FF%27FD08F8277DFD05FF27FD0CF8FD0BFFA8F8F827A8FD0FFFA8F8F8A8FD06%FF27F8F8277DFD2CFF27FD06F87DFF27FD0BF827525227FD0DF8A8FD0AFF%A8F8F8A8FD0FFFA827F8A8FD06FF27F8F87DFD2EFF52FD06F87DFF27F8F8%5252FD18F827FD0AFF52F852FD10FF7DF8A8FD06FFF8F8F87DFD12FFA8A8%7DA8A8FD18FF52FD06F87DFFA852A8FFFFA827FD17F87DFD08FF7DF8F8FD%19FF27F8F8A8FD10FF7D27FD07F82752FD15FF7DFD06F87DFD08FF7DFD10%F8277DFD04F827FD07FF27F8F852FD18FF27F8F8A8FD10FF27FD0CF87DFD%13FF7DFD06F8A8FD09FFA8FD06F827FFA852FD05F827FF7DFD04F8A8FD05%FF27F8F8F87DFD17FF52F8F87DFD0EFFA87DFD0FF8FD13FF7DFD06F8A8FD%0AFF7DFD05F827A8FFA8FD06F87DFF52F8F8F87DFD04FFA8FD04F8A8FD16%FF7DF8F8A8FD0AFF7D7D2727FD12F8FD13FF7DFD06F8FD0CFF7DFD06F852%52FD07F8FFFF52F8F852FD04FF52FD04F827FD15FFA8F8F8FD07FFA87D52%27F8F8F827FD05F8272727F827F8F8F827F8272752A8FD13FF7DFD05F827%FD0DFF52FD0FF8FFFF7D52FD04FF7DFD05F827A8FD14FF27F87DFD04FFA8%27FD07F8A8FFFFA8A87DFD05FFA8FFA8A8A8FD18FF7DFD05F852FD0EFF52%FD0FF8FD07FFFD04F827A8FD15FF7DF852FD05FF7DF82752A8A8A87DFD29%FFA8FD05F8A8FD0FFF52FD0EF852FD05FF27F8F8A8A8FD16FFA8F8F87DFD%37FF7D275252A8FD11FF7DFD04F827A87D27FD05F87DFD04FF7DF8F8A8FD%18FF52F8F8A8FD4EFF52F8F827FD04FF52FD04F8A8FD04FF52F827FD18FF%A8FD04F8FD4FFFA8A8FD06FFA85252A8FD05FF7D52A8FD19FFFD05F8A8FD%7BFFA827FD04F87DFD7AFF52FD04F852FD7BFFF8F8F827A8FD7CFF7DA8FD%A0FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O0 g0 J 0 j 1 w 4 M []0 d1 XR404 354 m409.4834 346.0015 404.4121 334.6592 403 324 c400.1753 302.6787 395.6177 283.4658 392 261 c390.6479 252.6045 389.1211 235.2578 381 235 c369.4971 234.6348 373.9858 256.0322 376 268 c377.5479 277.1973 383.1938 291.0547 385 303 c387.9282 322.3638 384.8228 352.9556 404 354 CfLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 2) Ln0 A0 O0 g0 J 0 j 1 w 4 M []0 d1 XR631 -174 m629.5459 -158.5664 645.5654 -149.9551 655 -141 c675.5664 -121.4785 695.0156 -106.2666 718 -86 c727.1563 -77.9268 745.0371 -68.6514 750 -59 c752.1641 -54.792 752.2402 -49.3262 754 -45 c756.7012 -38.3594 762.5322 -33.6807 763 -26 C760.1191 -18.5479 743.25 -25.084 741 -17 C736.8877 -6.46191 745.5752 -0.353516 749 8 c755.0947 22.8662 764.8027 48.4785 768 65 c772.8867 90.2471 765.4082 122.2832 761 146 c759.0459 156.5137 757.084 166.7148 753 176 c748.8066 185.5322 741.709 192.2852 741 203 C741.9141 204.7529 742.8594 206.4746 746 206 C762.5146 187.5889 768.6084 162.8125 784 142 c796.4775 125.1279 812.46 114.3643 816 86 c818.6416 64.8369 814.707 38.417 833 32 c840.6787 29.3066 856.3516 31.2627 864 25 c883.2871 9.20703 881.7402 -58.2354 848 -58 c833.9932 -57.9023 825.9385 -35.0449 815 -35 c807.5947 -34.9697 802.3428 -46.7842 797 -52 c790.373 -58.4697 780.0889 -67.0059 776 -69 c770.3506 -71.7559 763.5381 -72.2734 758 -75 c746.874 -80.4766 735.5928 -90.626 725 -99 c703.0273 -116.3701 683.7969 -131.2021 664 -151 c654.9805 -160.0195 645.5107 -172.541 631 -174 CfLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 2 79 255 79 0 50 Lb(Layer 3) Ln0 A0 O0 g0 J 0 j 1 w 4 M []0 d1 XR295 506 m293.5195 516.9863 272.7036 517 258 517 c240.7207 517 223.1235 508.606 211 513 c199.2153 517.2715 202.0415 530.502 197 542 c189.4653 559.1851 156.2427 566.5088 138 580 c130.1689 585.791 123.105 597.0415 114 599 c97.1777 602.6187 91.6748 594.3721 78 596 c75.1353 596.3408 72.5303 597.2212 70.0073 598.3188 C-8.37061 565.4014 -73.9375 524.3887 -32.3857 489.3979 c23.6729 442.1909 39.9341 430.6523 44.4863 428.3032 C45.0049 428.3398 45.5225 428.3623 46.0396 428.3691 C46.0396 428.3691 L46.041 428.3691 L52.6143 428.4521 59.0737 426.3506 65 428 c74.5112 430.6475 77.7104 440.3086 86 448 c94.1943 455.603 105.5771 465.8794 122 463 c129.1792 461.7412 141.0366 454.0024 150 448 c166.8433 436.7212 188.6792 425.1611 191 401 c192.6333 383.998 189.4902 366.5527 180 349 C172.6626 347.4028 169.4082 350.4795 163 349 c153.8242 346.8813 150.2207 337.0327 141 337 c131.0415 336.9644 123.7466 344.4717 124 353 c124.5869 372.7666 158.0283 367.9556 166 383 C165.2051 403.332 162.5347 433.6978 145 434 c129.918 434.2598 131.2354 416.4106 126 405 c123.7803 400.1621 116.9014 393.8374 113 387 c109.4219 380.729 108.0781 372.8521 105 370 c97.4907 363.042 88.1099 363.6938 81 360 c68.6245 353.5703 59.6943 339.4087 49 337 c31.6099 333.083 17.8091 337.856 9.69482 347.604 c9.67139 347.6338 9.64307 347.6572 9.61963 347.688 c9.49609 347.8501 9.37891 347.9976 9.25635 348.1563 c8.98242 348.501 8.70703 348.8447 8.44678 349.2007 C-20.5801 386.1807 -12.2876 332.2808 -33.9536 315.7715 C-33.9536 315.7715 L-21.8174 316.1484 -9.62842 314.3438 2 309 c18.5737 301.3843 30.5552 287.5273 48 288 c54.4473 288.1748 62.4834 293.375 69 294 c86.7451 295.7012 107.7168 286.6221 130 285 c151.8652 283.4082 181.3032 288.709 194 283 c204.98 278.0635 220.2769 303.8682 222 313 c227.5259 342.2803 218.2573 378.7002 225 399 c230.5107 415.5908 243.9995 421.5591 245 436 c245.7344 446.6001 240.3438 455.4736 236 465 c232.3584 472.9863 225.2686 483.396 228 492 c234.4365 512.2729 278.4102 496.5576 295 506 CfLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 3 79 79 255 0 50 Lb(Layer 4) Ln0 A0 O0 g0 J 0 j 1 w 4 M []0 d0 XR31 183 m62.23 168.1094 77.5542 132.5898 78 99 c78.0703 93.6924 78.0386 87.5303 77.4512 81.127 C137.916 12.4648 286.708 -101.8535 532.6318 41.9902 C537.8975 53.8438 539.4756 69.6641 542 84 c543.6113 93.1514 545.6094 105.833 547 116 c548.6982 128.416 546.8271 142.2363 552 151 c556.374 158.4102 564.957 162.6113 572 168 c584.4893 177.5566 597.1484 186.8867 609 203 c612.835 208.2148 620.6396 224.2285 609 227 c599.8525 229.1777 597.7627 218.2217 590 211 c584.7773 206.1406 578.3037 204.9727 574 200 c567.8477 192.8906 565.8057 179.1992 557 178 c546.3164 176.5449 542.9736 190.8984 534 190 c523.417 188.9404 520.2744 168.1777 518 153 c515.4707 136.1221 509.4189 122.501 510 108 c510.4512 96.7578 525.0068 75.3164 511 64 c506.4512 60.3252 497.4072 61.5059 489 59 c475.8467 55.0801 460.626 43.3096 446 35 c425.5781 23.3975 411.4854 0.90918 382 3 c373.4858 3.60352 367.8569 10.1211 358 12 c351.2402 13.2881 345.5137 11.1816 340 13 c331.2578 15.8828 317.3877 32.8623 319 44 c320.7354 55.9883 336.0977 58.4961 352 55 C368.9038 66.6016 349.2441 91.1963 359 105 c363.6929 111.6396 377.8501 109.5146 380 117 c382.6543 126.2432 375.0806 132.3447 368 134 c359.7441 135.9297 353.1963 129.9912 346 132 C340.4063 139.6201 343.9004 156.6533 344 167 c344.2441 192.3271 346.0039 219.418 345 246 c344.4409 260.8076 337.2549 278.0869 335 295 c332.9551 310.3389 332.3672 324.9326 329 338 c325.3071 352.3325 315.7188 382.9326 303 383 c288.3193 383.0781 280.6147 347.1885 280 330 c279.3228 311.0596 285.125 285.8955 287 260 c288.7217 236.2227 298.3413 210.2451 293 191 c290.6025 182.3613 283.228 181.4375 278 174 c272.2095 165.7617 273.2871 149.3447 262 153 C253.1475 168.4346 275.9941 172.0146 282 190 c286.5356 203.582 283.7778 234.375 272 234 c262.2456 233.6895 265.8804 219.1689 262 211 C254.1309 210.6348 255.2354 214.377 250 213 c237.4648 209.7041 233.2969 174.585 217 178 c208.5908 179.7617 210.0967 189.2959 204 196 c197.7939 202.8252 183.9561 205.2148 179 212 c172.9688 220.2568 173.7095 236.8672 165 239 c140.6147 244.9717 145.311 204.8975 152 194 c160.6851 179.8506 183.0396 176.8232 177 157 C165.73 153.7969 162.3169 162.1162 151 162 c141.5454 161.9033 135.7461 154.2549 127 155 c117.3911 155.8184 104.4209 174.7783 99 180 c80.0225 198.2803 61.5859 208.6924 32 218 c25.1318 220.1611 18.0649 221.4531 12 224 c5.08496 226.9043 -0.495117 231.0957 -6.00781 232.001 c-24.061 234.9619 -42.3838 228.9736 -60.4604 229.1875 c-64.2329 229.2324 -78.8345 231.4502 -91.9663 232.1924 C-94.3145 226.0264 -97.4492 220.4082 -101.2324 215.2891 C-88.8286 210.0332 -71.5771 209.4063 -60 206 c-32.1514 197.8096 7.52246 194.1943 31 183 cfLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 4 255 255 79 0 50 Lb(Layer 5) Ln0 A0 O0 g0 J 0 j 1 w 4 M []0 d1 XR18.8506 -24.2998 m16.1226 -12.9541 13.0234 -2.09863 9.58887 8.19434 C-10.771 22.9814 -7.78906 82.8037 -42 80 c-61.9277 78.3662 -59.2788 52.7773 -69 33 c-74.5605 21.6865 -82.4204 17.4844 -83 7 c-84.1709 -14.1846 -69.6025 -23.7637 -51 -23 C-45.4712 -41.2119 -45.8618 -61.668 -44 -82 c-40.2432 -123.0273 -36.6226 -162.6104 -33 -202 c-31.1846 -221.7393 -35.8628 -243.7305 -25 -259 C-11.1958 -258.8477 3.04932 -259.9727 14 -254 c18.417 -251.5908 21.7197 -246.9316 24.2227 -241.1064 C29.5645 -211.4863 32.5 -179.2393 32.5 -145.5 c32.5 -125.1074 31.4277 -105.2598 29.4004 -86.207 c28.6797 -81.0654 27.8789 -75.9922 27 -71 c24.2139 -55.1797 18.9326 -39.0342 18.8506 -24.2998 CfLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 5 255 79 255 0 50 Lb(Layer 6) Ln0 A*u1 D0 O0 g0 J 0 j 1 w 4 M []0 d1 XR523 29 m527.2158 32.2217 530.2881 36.7139 532.6318 41.9902 C286.708 -101.8535 137.916 12.4648 77.4512 81.127 C76.5464 71.2588 74.3105 60.8135 69 52 c65.8071 46.7012 54.3066 42.9248 49 35 c44.2559 27.916 44.269 18.0078 39 13 c35.3853 9.56445 24.5776 4.39453 18 5 c14.792 5.29492 12.0244 6.42578 9.58887 8.19434 C13.0234 -2.09863 16.1226 -12.9541 18.8506 -24.2988 C18.8291 -20.4248 19.1616 -16.6475 20 -13 C52.8872 5.63574 55.9009 -47.0039 51 -81 c50.1602 -86.8242 44.0933 -96.5781 44 -102 c43.8745 -109.29 48.9424 -114.5957 50 -122 c53.4849 -146.3945 43.4619 -176.9902 61 -180 c69.6123 -181.4775 79.624 -169.2832 89 -169 c97.7734 -168.7354 104.3262 -176.9043 112 -182 c120.0615 -187.3535 129.1631 -191.4395 134 -196 c139.7412 -201.4131 143.5933 -209.5166 150 -217 c158.1689 -226.542 169.0112 -236.791 180 -247 c189.707 -256.0186 202.1416 -273.5693 213 -274 c229.9761 -274.6738 235.1802 -255.0225 253 -255 c275.3604 -254.9727 282.7192 -283.2979 309 -277 c318.0967 -274.8203 326.459 -260.292 326 -250 c325.4385 -237.4111 311.5825 -232.5869 303 -220 c296.1226 -209.9131 289.4209 -197.0771 289 -185 C300.4692 -186.8984 307.8784 -199.5713 317 -210 c322.9453 -216.7969 337.0977 -236.2188 351 -226 c361.9839 -217.9258 349.9961 -192.6973 346 -184 c340.1777 -171.3301 328.3374 -158.0742 329 -146 c329.6099 -134.8887 347.1245 -124.8457 354 -120 c362.8804 -113.7402 375.3535 -109.6982 381 -96 C360.293 -89.8975 338.1582 -125.2236 317 -121 c306.8828 -118.9805 303.2451 -106.0742 298 -97 c292.1279 -86.8418 284.4355 -80.9551 284 -68 C291.5415 -60.833 302.3203 -65.1084 311 -65 c323.0781 -64.8486 337.811 -65.417 352 -64 c372.689 -61.9336 381.7314 -43.4336 397 -37 c401.5752 -35.0723 408.6143 -35.2246 415 -33 c423.3896 -30.0781 430.292 -21.5918 438 -19 c442.2422 -17.5732 448.874 -18.2695 454 -17 c466.7979 -13.8301 478.1494 -4.90723 490 -14 c504.1104 -24.8262 500.5244 -68.4697 491 -79 c485.3135 -85.2871 472.3213 -85.6484 467 -92 c461.0645 -99.084 454.4404 -123.793 452 -135 c448.6631 -150.3232 446.5977 -168.4297 438 -179 c430.7734 -187.8857 420.4043 -186.9639 414 -196 c410.7373 -200.6035 410.4307 -207.1152 407 -214 c404.2852 -219.4482 399.8867 -222.8574 396 -228 c392.1377 -233.1104 390.0903 -239.2012 387 -244 c381.2412 -252.9424 368.2285 -263.6816 379 -278 C401.208 -281.709 398.1367 -252.2451 411 -245 c416.5303 -241.8857 422.04 -244.5576 428 -243 c437.9141 -240.4082 445.7559 -227.9961 459 -230 C459.6768 -220.4453 450.5996 -217.7051 450 -208 c449.3066 -196.7773 458.1553 -177.9053 464 -167 c468.623 -158.374 477.2852 -148.9883 483 -140 c499.4063 -114.1992 510.6621 -80.7217 521 -47 c524.4766 -35.6582 530.8691 -22.0215 529 -14 c525.7773 -0.168945 498.7822 -1.3457 498 11 c497.3184 21.752 516.1592 23.7725 523 29 cf0 D230 -218 m218.8862 -219.3984 201.2842 -213.0576 201 -203 c200.3481 -179.918 245.8672 -198.2227 230 -218 Cf261 -138 m248.9287 -136.1475 241.8164 -123.2295 234 -114 c225.8643 -104.3936 220.2402 -92.6885 213 -84 c205.1973 -74.6367 188.6641 -59.1768 174 -73 C175.7573 -90.2441 183.5977 -96.2764 191 -111 c195.7202 -120.3887 209.9419 -137.1475 207 -150 c202.5337 -169.5137 147.5786 -153.0654 138 -147 c128.0337 -140.6895 118.0679 -128.1953 117 -118 c116.0684 -109.1035 119.6997 -100.3223 121 -86 c122.9272 -64.7695 119.8521 -46.1133 147 -49 c153.4365 -49.6846 161.5347 -55.6582 172 -58 c179.7798 -59.7402 188.812 -58.2793 196 -60 c225.4351 -67.0479 230.8184 -81.7432 243 -103 c249.3438 -114.0703 262.4922 -124.8213 261 -138 Cf*ULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 6 79 255 255 0 50 Lb(Layer 7) Ln0 Au0 O0 g0 J 0 j 1 w 4 M []0 d1 XR-71 309 m-59.1709 312.6191 -46.5913 315.3789 -33.9536 315.7715 C-33.9536 315.7715 L-12.2876 332.2808 -20.5801 386.1807 8.44678 349.2007 C3.11621 356.4961 0.711914 366.2026 2 377 c4.16748 395.168 25.8438 424.9937 42 428 c42.8296 428.1543 43.6587 428.2446 44.4863 428.3032 C39.9341 430.6523 23.6729 442.1909 -32.3857 489.3979 c-73.9375 524.3887 -8.37061 565.4014 70.0073 598.3188 C63.6982 601.063 57.9189 605.2095 50 606 c35.0044 607.4966 17.542 599.5547 1 598 c-13.5049 596.6372 -26.3418 598.272 -38 596 c-49.8271 593.6953 -68.0547 588.2251 -76 583 c-89.6909 573.9966 -96.6094 545.877 -106 526 c-108.9531 519.749 -114.1235 511.9824 -117 505 c-122.2861 492.1694 -123.8589 479.5786 -129 468 c-131.7388 461.8315 -134.5767 456.7031 -136 450 c-137.3125 443.8174 -136.9497 436.4863 -140 430 c-144.5327 420.3618 -155.7197 415.478 -165 409 c-174.0859 402.6572 -180.082 391.8008 -193 395 C-194.3071 411.1094 -173.5249 413.4248 -171 429 C-182.0132 434.8213 -198.1802 423.0923 -206 416 c-212.6597 409.96 -227.1567 393.2783 -223 381 c-219.0083 369.208 -198.0806 371.3569 -184 375 c-172.4531 377.9873 -156.9614 385.0645 -149 390 c-139.7734 395.7197 -131.2729 411.9165 -120 410 c-109.5986 408.2319 -107.6597 388.8579 -110 381 c-113.8633 368.0293 -128.9131 369.9985 -133 356 C-126.8755 349.1943 -116.3901 355.4844 -107 356 c-92.3555 356.8037 -75.6851 354.9634 -64 357 C-72.1011 344.5024 -89.2769 344.3564 -103 339 c-114.5835 334.4785 -147.793 321.397 -153 309 c-162.9351 285.3457 -129.124 246.9746 -144 234 c-151.8237 227.1758 -159.6016 232.5234 -165 236 c-172.6738 240.9414 -172.3223 246.3105 -177 252 c-181.0449 256.9199 -189.2227 257.7539 -192 264 C-187.8389 282.085 -198.3813 289.6113 -197 302 c-195.0249 319.7163 -170.7061 316.7632 -166 335 C-172.0962 342.3447 -183.0649 336.3975 -191 333 c-203.7397 327.5454 -217.9565 321.5771 -225 311 C-225 300.3335 -225 289.667 -225 279 C-218.8721 251.7881 -212.8662 235.4561 -194 221 c-187.0254 215.6563 -179.0435 208.5254 -171 207 c-164.8047 205.8252 -154.1914 208.293 -144 208 c-136.0801 207.7725 -129.2559 205.585 -123 206 c-116.875 206.4063 -110.9102 209.4492 -104.082 211.6621 C-97.1538 219.9336 -91.9868 229.6045 -89.2666 240.918 C-89.543 241.5781 -89.791 242.2686 -90 243 c-91.4292 248 -88.5229 253.668 -89 262 c-89.8154 276.2432 -99.0215 279.8125 -94 293 c-90.2383 302.8794 -79.8677 306.2866 -71 309 cf46.0396 428.3691 m46.0396 428.3691 L46.041 428.3691 L46.0396 428.3691 Lf9.61963 347.688 m9.64307 347.6572 9.67139 347.6338 9.69482 347.604 c9.54443 347.7842 9.40283 347.9727 9.25635 348.1563 c9.37891 347.9976 9.49609 347.8501 9.61963 347.688 cfULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 7 128 128 128 0 50 Lb(Layer 8) Ln0 A0 O0 g0 J 0 j 1 w 4 M []0 d1 XR535 237 m533.0303 245.9854 534.5938 255.5625 534 266 c533.0488 282.7275 527.4092 300.3379 527 313 c526.7744 319.9775 529.0137 325.5835 528 331 c526.6475 338.2261 518.5225 344.0879 515 350 c505.0947 366.6274 497.9453 383.6724 481 394 c472.9912 398.8813 464.9424 400.2246 457 405 c448.043 410.3853 444.8916 420.0249 438 428 c424.166 444.0088 406.918 454.0815 392 469 c378.0566 482.9434 358.5078 501.5225 342 507 c330.27 510.8921 322.019 507.7832 322 498 c321.981 488.3462 340.5977 478.1362 350 471 c360.8237 462.7852 373.6846 455.0142 382 448 c390.8779 440.5117 394.0645 432.6577 403 429 c406.2803 427.6572 414.5117 427.0737 417 426 c425.5635 422.3042 433.4316 408.0459 439 398 c444.4824 388.1089 449.7129 376.4346 454.2764 363.6538 C454.2939 363.6128 454.3096 363.5742 454.3271 363.5332 c470.3516 325.1079 470.5088 326.541 466.5693 357.7383 C466.0732 360.3477 465.7158 362.8691 465.6367 365.1147 C465.6348 365.1274 465.6338 365.1396 465.6318 365.1523 C465.6367 365.147 L465.5381 368.0234 465.8896 370.4482 467 372 C468.0547 373.7402 468.4893 375.0913 471 375 c491.8994 374.2393 510.9277 328.8398 514 300 c514.9336 291.2324 514.3965 273.2813 511 267 c507.5469 260.6123 494.6416 252.4932 489 254 c485.7178 254.877 483.3779 260.7539 481.6416 268.5684 c481.3682 269.6504 481.1211 270.8506 480.9043 272.1865 c480.4238 274.7402 479.9971 277.4316 479.6113 280.1758 c463.8516 376.75 468.0342 313.0078 469.3613 295.1396 c469.46 293.9668 469.5488 292.7949 469.6299 291.6221 c469.667 291.1494 469.6885 290.8887 Y469.6836 290.9063 469.6748 290.9316 V470.6328 276.3975 470.2217 261.875 468 248 c466.4736 238.4658 461.8799 230.2012 462 221 c462.292 198.5586 477.1533 171.7227 468 148 c460.2295 127.8594 434.5586 120.749 434 93 C443.5557 92.168 450.7969 101.3926 459 106 c479.0859 117.2803 497.3633 131.8262 503 156 C497.416 161.7979 491.374 160.3984 488 167 c479.2207 184.1768 486.5508 240.1094 505 237 c521.0957 234.2871 504.499 220.7764 504 210 c503.7344 204.2686 505.4443 195.9404 512 193 c527.0264 186.2598 539.8428 203.5156 541 213 c542.0439 221.5605 536.8662 228.4863 535 237 cfLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 8 0 0 0 0 50 Lb(Layer 9) Ln0 A0 O0 g0 J 0 j 1 w 4 M []0 d1 XR658 288 m651.6426 285.1631 648.9063 290.2988 643 290 c639.1338 289.8047 636.0518 285.7686 632 286 c623.7891 286.4697 620.5449 297.9375 614 303 c607.8691 307.7427 599.8154 307.0493 599 315 C600.3135 315.353 600.5732 316.7607 602 317 C613.1309 320.6812 627.0068 313.7271 637 308 c645.8936 302.9033 657.6191 298.0039 658 288 CfLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 9 255 102 0 0 50 Lb(Layer 10) Ln0 A0 O0 g0 J 0 j 1 w 4 M []0 d1 XR1004 -15 m1004.2988 -20.6104 1035.3945 -42.3418 1018 -50 c1005.2568 -55.6104 995.7725 -27.917 979 -29 c963.6982 -29.9883 966.0293 -45.332 953 -51 C935.751 -77.9414 909.1855 -94.9883 879 -111 c860.2715 -120.9346 839.0996 -131.998 819 -138 c808.2734 -141.2031 795.2852 -139.3447 784 -143 c768.1709 -148.127 742.8545 -168.2402 731 -180 c724.9658 -185.9863 720.8486 -193.7656 715 -199 c709.6064 -203.8262 702.2402 -206.7598 698 -211 c691.4023 -217.5977 673.1074 -241.4883 675 -256 c676.2129 -265.2988 687.0752 -274.3281 696 -279 c703.1172 -282.7256 715.2129 -282.1445 717 -291 c720.5596 -308.6416 696.334 -317.2578 682 -312 c666.0586 -306.1523 669.5674 -285.8516 659 -282 C654.959 -279.1357 646.2568 -284.874 643 -280 C641.6914 -269.4453 647.9717 -256.25 654 -246 c676.5068 -207.7295 713.2139 -168.0322 747 -138 c773.4434 -114.4951 803.6455 -97.1992 836 -77 c845.8496 -70.8506 859.1992 -58.9063 868 -59 c876.1553 -59.0859 878.0664 -66.0391 886 -67 c902.8145 -69.0361 929.8779 -46.4824 939 -37 c949.0273 -26.5762 952.5791 -13.665 964 -8 c969.1582 -5.44141 977.5117 -5.34766 984 -3 c990.2861 -0.725586 997.3857 4.65039 1000 5 c1010.6152 6.41992 1017.127 1.33691 1017 -3 c1016.749 -11.5908 1006.2422 -6.7832 1004 -15 CfLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 10 0 85 0 0 50 Lb(Layer 11) Ln0 A0 O0 g0 J 0 j 1 w 4 M []0 d1 XR1024 -197 m1024 -200.333 1024 -203.667 1024 -207 C1017.1953 -222.0703 1000.7734 -218.7354 981 -222 c949.1084 -227.2656 918.7012 -219.0664 888 -222 c881.0869 -222.6602 874.6787 -225.1787 868 -225 c851.3379 -224.5547 840.2061 -218.2256 827 -222 c817.457 -224.7275 813.1348 -235.0537 804 -236 c798.5029 -236.5693 791.8457 -232.8467 786 -233 c768.5332 -233.458 747.124 -249.5449 735 -235 C741.3389 -224.9229 755.8281 -224.4268 767 -222 c791.0752 -216.7695 815.2939 -210.9238 841 -206 c853.4863 -203.6084 868.1816 -202.8408 879 -198 c888.7363 -193.6426 893.5381 -184.084 903 -180 c935.5039 -165.9717 1014.417 -172.3037 1024 -197 CfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF